events {
    worker_connections 1024;
}

http {
    # Definir el grupo de servidores backend con pesos
    upstream flask_app {
        # Servidor principal con mayor peso (50% del tráfico)
        server app1:5000 weight=5;
        
        # Servidor secundario con peso medio (30% del tráfico)
        server app2:5000 weight=3;
        
        # Servidor de respaldo con menor peso (20% del tráfico)
        server app3:5000 weight=2;
    }
    
    # Configuración del servidor NGINX
    server {
        listen 80;
        server_name localhost;
        
        # Logs para monitorear el balanceo
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        
        # Configuración del balanceador de carga
        location / {
            proxy_pass http://flask_app;
            
            # Headers para mantener información del cliente original
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configuraciones de timeout
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Configuración para sesiones persistentes (opcional)
            proxy_set_header X-Server-Name $upstream_addr;
        }
        
        # Endpoint para verificar el estado del balanceador
        location /nginx-status {
            access_log off;
            return 200 "NGINX Load Balancer OK\n";
            add_header Content-Type text/plain;
        }
    }
}
